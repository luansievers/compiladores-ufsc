Compilador X+++ - Versao 1.0 - 2017
Lendo do arquivo inputSemErros.txt . . .
Linha: 1 Coluna: 1 /* exemplo de 
comentario multilinha
*/  <blockComment>  7
Linha: 4 Coluna: 1 class  class  10
Linha: 4 Coluna: 7 Classe  <IDENT>  32
Linha: 4 Coluna: 14 extends  extends  15
Linha: 4 Coluna: 22 Compilador  <IDENT>  32
Linha: 4 Coluna: 32 {  <LBRACE>  37
Linha: 6 Coluna: 9 constructor  constructor  11
Linha: 6 Coluna: 20 (  <LPAREN>  35
Linha: 6 Coluna: 21 )  <RPAREN>  36
Linha: 6 Coluna: 22 {  <LBRACE>  37
Linha: 7 Coluna: 17 if  if  17
Linha: 7 Coluna: 20 (  <LPAREN>  35
Linha: 7 Coluna: 21 ano  <IDENT>  32
Linha: 7 Coluna: 25 ==  <EQ>  49
Linha: 7 Coluna: 28 7BFh  <int_constant>  26
Linha: 7 Coluna: 32 )  <RPAREN>  36
Linha: 7 Coluna: 34 int  <primitivetype>  25
Linha: 7 Coluna: 38 idade  <IDENT>  32
Linha: 7 Coluna: 44 =  <ASSIGN>  46
Linha: 7 Coluna: 46 34  <intLiteral>  30
Linha: 7 Coluna: 49 else  else  14
Linha: 7 Coluna: 54 idade  <IDENT>  32
Linha: 7 Coluna: 60 =  <ASSIGN>  46
Linha: 7 Coluna: 62 null  null  29
Linha: 7 Coluna: 66 ;  <SEMICOLON>  42
Linha: 8 Coluna: 17 string  <primitivetype>  25
Linha: 8 Coluna: 24 nome  <IDENT>  32
Linha: 8 Coluna: 29 =  <ASSIGN>  46
Linha: 8 Coluna: 31 "GrupoF"  <stringLiteral>  27
Linha: 9 Coluna: 17 char  <primitivetype>  25
Linha: 9 Coluna: 22 email  <IDENT>  32
Linha: 9 Coluna: 28 =  <ASSIGN>  46
Linha: 9 Coluna: 30 "email@ufsc.br"  <string_constant>  28
Linha: 10 Coluna: 17 float  <primitivetype>  25
Linha: 10 Coluna: 23 mergulho  <IDENT>  32
Linha: 10 Coluna: 32 =  <ASSIGN>  46
Linha: 10 Coluna: 34 1.5e-1  <floatLiteral>  31
Linha: 10 Coluna: 40 ;  <SEMICOLON>  42
Linha: 10 Coluna: 42 //exemplo de comentario  <lineComment>  6
Linha: 12 Coluna: 17 switch  switch  23
Linha: 13 Coluna: 25 case  case  9
Linha: 13 Coluna: 30 nome  <IDENT>  32
Linha: 13 Coluna: 35 !=  <NEQ>  52
Linha: 13 Coluna: 38 null  null  29
Linha: 14 Coluna: 17 break  break  8
Linha: 15 Coluna: 17 default  default  12
Linha: 15 Coluna: 25 null  null  29
Linha: 16 Coluna: 17 end  <IDENT>  32
Linha: 18 Coluna: 17 while  while  24
Linha: 18 Coluna: 23 (  <LPAREN>  35
Linha: 18 Coluna: 24 idade  <IDENT>  32
Linha: 18 Coluna: 30 <  <LT>  48
Linha: 18 Coluna: 32 100  <intLiteral>  30
Linha: 18 Coluna: 35 )  <RPAREN>  36
Linha: 18 Coluna: 36 {  <LBRACE>  37
Linha: 19 Coluna: 25 do  do  13
Linha: 19 Coluna: 28 idade  <IDENT>  32
Linha: 19 Coluna: 33 +  <PLUS>  53
Linha: 19 Coluna: 34 +  <PLUS>  53
Linha: 19 Coluna: 35 ;  <SEMICOLON>  42
Linha: 20 Coluna: 17 }  <RBRACE>  38
Linha: 22 Coluna: 17 for  for  16
Linha: 22 Coluna: 20 (  <LPAREN>  35
Linha: 22 Coluna: 21 i  <IDENT>  32
Linha: 22 Coluna: 22 =  <ASSIGN>  46
Linha: 22 Coluna: 23 0  <intLiteral>  30
Linha: 22 Coluna: 24 ;  <SEMICOLON>  42
Linha: 22 Coluna: 26 i  <IDENT>  32
Linha: 22 Coluna: 27 <  <LT>  48
Linha: 22 Coluna: 28 idade  <IDENT>  32
Linha: 22 Coluna: 33 ;  <SEMICOLON>  42
Linha: 22 Coluna: 35 i  <IDENT>  32
Linha: 22 Coluna: 36 -  <MINUS>  54
Linha: 22 Coluna: 37 -  <MINUS>  54
Linha: 22 Coluna: 38 )  <RPAREN>  36
Linha: 22 Coluna: 39 {  <LBRACE>  37
Linha: 23 Coluna: 25 print  print  19
Linha: 23 Coluna: 31 "simmbolos"  <stringLiteral>  27
Linha: 23 Coluna: 43 .  <DOT>  44
Linha: 23 Coluna: 45 :  <COLON>  41
Linha: 23 Coluna: 47 ,  <COMMA>  43
Linha: 23 Coluna: 49 _  <UNDERLINE>  45
Linha: 24 Coluna: 25 print  print  19
Linha: 24 Coluna: 31 "operadores"  <stringLiteral>  27
Linha: 24 Coluna: 44 >  <GT>  47
Linha: 24 Coluna: 46 <=  <LE>  50
Linha: 24 Coluna: 49 >=  <GE>  51
Linha: 24 Coluna: 52 *  <STAR>  55
Linha: 24 Coluna: 54 /  <SLASH>  56
Linha: 24 Coluna: 56 %  <REM>  57
Linha: 26 Coluna: 17 }  <RBRACE>  38
Linha: 27 Coluna: 17 return  return  21
Linha: 27 Coluna: 24 new  new  18
Linha: 27 Coluna: 28 Classe  <IDENT>  32
Linha: 27 Coluna: 34 (  <LPAREN>  35
Linha: 27 Coluna: 35 )  <RPAREN>  36
Linha: 28 Coluna: 9 }  <RBRACE>  38
Linha: 30 Coluna: 1 }  <RBRACE>  38
Linha: 30 Coluna: 3   <EOF>  0
Programa analisado com sucesso.
